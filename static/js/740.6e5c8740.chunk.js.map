{"version":3,"file":"static/js/740.6e5c8740.chunk.js","mappings":"+MAyEA,UApEe,WAAO,IAAD,EACnB,GAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAG3CC,GAAWC,EAAAA,EAAAA,MAqBjB,OAPAC,EAAAA,EAAAA,YAAU,WACHT,IACLU,EAAAA,EAAAA,IAAiBV,GAAYW,MAAK,SAAAC,GAAI,OACpCb,EAAea,EAAKA,KAAKC,QADW,GAGvC,GAAE,CAACb,KAGF,iCACE,kBAAMc,SAdiB,SAAAC,GACzBA,EAAEC,iBACFf,EAAcc,EAAEE,OAAOC,SAASC,MAAMC,MACvC,EAWG,WACE,kBAAOC,QAAQ,GAAf,UACE,kBACEC,KAAK,OACLC,KAAK,QACLC,SA1BgB,SAAC,GAAgB,IAAdP,EAAa,EAAbA,OAC3B,GAAqB,KAAjBA,EAAOG,MACT,OAAOhB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEe,MAAOF,EAAOG,OACjC,EAsBSA,MAAOf,OAGX,mBAAQiB,KAAK,SAAb,oBAAsC,OAEvCxB,IACC,wBACGA,EAAY2B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACnC,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMxB,GAA1C,WACE,gBACEyB,UAAWC,EAAAA,EAAAA,YACXC,IACEP,EAAW,yCAC2BA,GA7CxD,wHAgDgBQ,IAAKP,EACLQ,OAAO,WAET,wBAAKR,QAZAF,EAgBZ,QAKV,C,oKCrEKW,EAAU,mCACVC,EAAW,+BAEV,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UACGF,EADH,uCAC0CD,IAC9C1B,MAAK,SAAA8B,GACJ,OAAwB,MAApBA,EAASC,OACJD,EAAS7B,KAET+B,QAAQC,OAAO,IAAIC,MAAM,sBAEnC,GACJ,CAEM,SAASC,EAAgBpB,GAC9B,OAAOc,EAAAA,EAAAA,IAAA,UACGF,EADH,kBACqBZ,EADrB,oBACmCW,IACvC1B,MAAK,SAAA8B,GACJ,OAAwB,MAApBA,EAASC,OACJD,EAEAE,QAAQC,OAAO,IAAIC,MAAM,sBAEnC,GACJ,CAEM,SAASE,EAAmBrB,GACjC,OAAOc,EAAAA,EAAAA,IAAA,UACGF,EADH,kBACqBZ,EADrB,4BAC2CW,IAC/C1B,MAAK,SAAA8B,GACJ,OAAwB,MAApBA,EAASC,OACJD,EAEAE,QAAQC,OAAO,IAAIC,MAAM,sBAEnC,GACJ,CAEM,SAASG,EAAsBtB,GACpC,OAAOc,EAAAA,EAAAA,IAAA,UACGF,EADH,kBACqBZ,EADrB,4BAC2CW,IAC/C1B,MAAK,SAAA8B,GACJ,OAAwB,MAApBA,EAASC,OACJD,EAEAE,QAAQC,OAAO,IAAIC,MAAM,sBAEnC,GACJ,CAEM,SAASnC,EAAiBS,GAC/B,OAAOqB,EAAAA,EAAAA,IAAA,UACGF,EADH,iCACoCD,EADpC,kBACqDlB,IACzDR,MAAK,SAAA8B,GACJ,OAAwB,MAApBA,EAASC,OACJD,EAEAE,QAAQC,OAAO,IAAIC,MAAM,sBAEnC,GACJ,C,oBC9DD,KAAgB,eAAiB,qCAAqC,aAAe,mCAAmC,YAAc,kCAAkC,aAAe,mCAAmC,UAAY,gCAAgC,QAAU,8BAA8B,YAAc,kCAAkC,YAAc,kC","sources":["Pages/Movies.jsx","Services/fetchAPI.js","webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582"],"sourcesContent":["import { fetchSearchMovie } from 'Services/fetchAPI';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport css from './MovieDetails/MovieDetails.module.css';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const searchQuery = searchParams.get('query') ?? '';\n  const NoImage =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/195px-No-Image-Placeholder.svg.png';\n  const location = useLocation();\n\n  const updateQueryString = ({ target }) => {\n    if (target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: target.value });\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    setMovieTitle(e.target.elements.query.value);\n  };\n\n  useEffect(() => {\n    if (!movieTitle) return;\n    fetchSearchMovie(movieTitle).then(data =>\n      setSearchMovie(data.data.results)\n    );\n  }, [movieTitle]);\n\n  return (\n    <>\n      <form onSubmit={handleSearchSubmit}>\n        <label htmlFor=\"\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            onChange={updateQueryString}\n            value={searchQuery}\n          ></input>\n        </label>\n        <button type=\"submit\">Search</button>{' '}\n      </form>\n      {searchMovie && (\n        <ul>\n          {searchMovie.map(({ id, poster_path, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    className={css.moviePoster}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : NoImage\n                    }\n                    alt={title}\n                    height=\"450px\"\n                  />\n                  <h2>{title}</h2>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6517314411afe114436dbf57ea19a496';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function fetchTrendingMovies() {\n  return axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        return Promise.reject(new Error('There is no movies'));\n      }\n    });\n}\n\nexport function fetchMoviesById(id) {\n  return axios\n    .get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status === 200) {\n        return response;\n      } else {\n        return Promise.reject(new Error('There is no movies'));\n      }\n    });\n}\n\nexport function fetchCastByMovieId(id) {\n  return axios\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status === 200) {\n        return response;\n      } else {\n        return Promise.reject(new Error('There is no movies'));\n      }\n    });\n}\n\nexport function fetchReviewsByMovieId(id) {\n  return axios\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n      if (response.status === 200) {\n        return response;\n      } else {\n        return Promise.reject(new Error('There is no movies'));\n      }\n    });\n}\n\nexport function fetchSearchMovie(query) {\n  return axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .then(response => {\n      if (response.status === 200) {\n        return response;\n      } else {\n        return Promise.reject(new Error('There is no movies'));\n      }\n    });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetails_movieContainer__uivPc\",\"buttonGoBack\":\"MovieDetails_buttonGoBack__Zc+k0\",\"moviePoster\":\"MovieDetails_moviePoster__euBLG\",\"movieSection\":\"MovieDetails_movieSection__UVG6d\",\"movieInfo\":\"MovieDetails_movieInfo__-OzrY\",\"addInfo\":\"MovieDetails_addInfo__hmUK-\",\"addInfoList\":\"MovieDetails_addInfoList__VKvba\",\"addInfoItem\":\"MovieDetails_addInfoItem__W11Qd\"};"],"names":["useState","searchMovie","setSearchMovie","movieTitle","setMovieTitle","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","fetchSearchMovie","then","data","results","onSubmit","e","preventDefault","target","elements","query","value","htmlFor","type","name","onChange","map","id","poster_path","title","to","state","from","className","css","src","alt","height","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","status","Promise","reject","Error","fetchMoviesById","fetchCastByMovieId","fetchReviewsByMovieId"],"sourceRoot":""}